/* 3 */
/* Highlight urgent label when it is checked */
.reminder-pop-over .high-priority > :checked ~ label {
    color: red;
}

/* 3 */
/* Changes color to red for labels following checked elements when .high-priority is hovered */
.reminder-pop-over .high-priority:hover > :checked ~ label {
    color: red;
}

/* 1 */
/* Sets width to auto for text input fields */
.reminder-pop-over [type="text"]input {
    width: auto;
}

/* 4 */
/* Sets grid layout for the third and fourth child divs of any direct child in .reminder-pop-over. */
.reminder-pop-over > * > :nth-child(3) > div,
.reminder-pop-over > * > :nth-child(4) > div {
    grid-template-columns: 20% 80%;
    grid-template-rows: 1fr;
}

/* 3 */
/* Hides buttons within any sibling of .is-invalid */
.reminder-pop-over .is-invalid ~ * button {
    visibility: hidden;
}

/* Styles .reminder-pop-over for flex layout, vertical stacking and some padding */
.reminder-pop-over {
    display: flex;
    flex-direction: column;
    padding: 5px;
}

/* Backlog PopOver */

/* Remove default styling and spacing from the unordered list within 
the .backlog-pop-over element. */
.backlog-pop-over > ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

/* 3 */
/* Apply the grid layout */
.backlog-pop-over li > div {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr 2fr;
    grid-template-rows: 1fr;
}

/* 4 */
.backlog-pop-over li > div > :last-child {
    justify-self: end;
    line-height: var(--spectrum-checkbox-line-height);
    margin-block-start: var(--spectrum-checkbox-top-to-text);
    margin-inline-start: var(--spectrum-checkbox-text-to-control);
    grid-column-start: 4;
    grid-column-end: 5;
}

/* 3 */
/* Positions the first child of divs in list items to span from the first to the second grid column. */
.backlog-pop-over li > div > :first-child {
    grid-column-start: 1;
    grid-column-end: 2;
}

/* 3 */
/* Positions the second child of divs in list items to span from the first to the second grid column. */
.backlog-pop-over li > div > :nth-child(2) {
    grid-column-start: 1;
    grid-column-end: 2;
}

/* 3 */
/* Positions the third child of divs in list items to span from the second to the third grid column. */
.backlog-pop-over li > div > :nth-child(3) {
    grid-column-start: 2;
    grid-column-end: 3;
}

/* 5 */
/* Strikethrough the label text to show that backlog item is completed */
.backlog-pop-over li > div > :checked ~ label {
    text-decoration: line-through;
}

/* 5 */
/* Sets color to white for all children of divs following checked elements in list items */
.backlog-pop-over li :checked ~ div > * {
    color: white;
}

/* 4 */
/* Style the edit and garabage icon for a task */
.backlog-pop-over li :last-child button {
    background-color: white;
    border-color: black;
    border-width: 1px;
}

/* timeline popover */
/* Sets the display to flex, which allows for flexible layouts.
The flex-direction is set to column, which stacks the children vertically 
*/
.timeline-pop-over {
    display: flex;
    flex-direction: column;
    padding: 5px;
}
/* Remove default styling and spacing from the unordered list within 
the timeline-pop-over */
.timeline-pop-over ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}
/* Transforms .timeline-pop-over when it's open at the bottom, moving and scaling it. */
.spectrum-Popover--bottom.is-open.timeline-pop-over {
    transform: translateY(var(--spectrum-overlay-animation-distance)) translateX(-450px) scale(0.8);
}

/* 2 */
/* Apply the grid layout */
.timeline-pop-over li {
    display: grid;
    grid-template-columns: 1fr 4fr 1fr;
    grid-template-rows: 1fr;
    padding-top: 5px;
    padding-bottom: 5px;
}

/* 3 */
/* Centers direct children of list items */
.timeline-pop-over li > * {
    align-self: center;
}

/* 3 */
/* Adjusts top and bottom padding for the 
second child of list items which is the steplist */
.timeline-pop-over li > :nth-child(2) {
    padding-top: calc(var(--spectrum-steplist-topPadding) / 2);
    padding-bottom: calv(var(--spectrum-steplist-bottomPadding) / 2);
}

/* 2 */
/* Sets opacity to 50% for divs following empty inputs. */
.timeline-pop-over input[value=""] + div {
    opacity: 50%;
}

/* 2 */
/* Styles the div surrounding the status button and svg in each row each row */
.timeline-pop-over li > :last-child {
    display: flex;
    flex-direction: row;
    align-items: center;
    column-gap: 5px;
}

/* 3 */
/* Make the status button red if the input is empty */
.timeline-pop-over input[value=""] ~ div > button {
    background-color: red;
}

/* 3 */
/* Hides the last child of divs following non-empty inputs,
this is step 4 in the step list */
.timeline-pop-over input:not([value=""]) ~ div > :last-child {
    visibility: hidden;
}
